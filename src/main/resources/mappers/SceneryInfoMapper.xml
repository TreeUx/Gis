<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bx.gis.mapper.SceneryInfoMapper">
    <select id="querySceneyInfo" resultType="java.lang.String">
        SELECT
            com_name
        FROM
            bx_commodity
        WHERE
            com_name LIKE #{scenery_name}
--             AND com_level = 5
            AND parentid = 0
            AND com_type = 4
            OR com_type = 5
    </select>
    <select id="querySceneryIfExist" resultType="java.lang.Integer">
        SELECT
          COUNT(1)
        FROM
          bx_commodity
        WHERE
          com_name = #{scenery_name}
    </select>

    <!-- 新增采集的景点单元信息 -->
    <insert id="addNewSceneryInfo" parameterType="com.bx.gis.entity.BxCommodityCommon">
      INSERT INTO
        bx_commodity (
          com_code,com_name,tra_id,bx_op_deptid,com_type,state,province,city,com_address,com_central,com_exit,
          com_entrance,com_duplex,com_begining,com_moment,com_level,charge_type,com_introduce,com_img,com_best
          ,com_shortest,com_longest,parentid,com_time
        ) VALUES (
          #{comCode},#{comName},#{traId},#{bxOpDeptid},#{comType},#{state},#{province},#{city},#{comAddress},#{comCentral},#{comExit}
          ,#{comEntrance},#{comDuplex},#{comBegining},#{comMoment},#{comLevel},#{chargeType},#{comIntroduce},#{comImg},#{comBest}
          ,#{comShortest},#{comLongest},#{parentid},now()
        )
    </insert>
    <!-- 添加景点信息对应的资源特色 -->
    <insert id="addSceneryType" parameterType="com.bx.gis.entity.BxSubjectivity">
        INSERT INTO
        bx_subjectivity (
          product_id,epidemic,recreational,nostalgic,romantic,parent_child
          ,naturalness,singularity,excitement,culture,ornamental,participatory,iconic
        ) VALUES (
          #{productId},#{epidemic},#{recreational},#{nostalgic},#{romantic},#{parentChild}
          ,#{naturalness},#{singularity},#{excitement},#{culture},#{ornamental},#{participatory},#{iconic}
        )
    </insert>

    <!-- 根据商品code查询景区商品信息 -->
    <select id="querySceneryInfoByCode" resultType="java.util.Map">
        SELECT
            bc.id "id",bc.com_code "com_code",com_name,state,city,com_address,com_entrance,com_exit,com_duplex,com_begining,com_moment,com_best,com_introduce,com_level,com_img,com_central,
            epidemic,recreational,nostalgic,romantic,parent_child,naturalness,singularity,excitement,culture,ornamental,participatory,iconic,bci.id 'imgId',
	        bci.img_url 'imgUrl'
        FROM
            bx_commodity bc
        LEFT JOIN
            bx_subjectivity bs
        ON com_code = product_id
        LEFT JOIN
            bx_commo_img bci
        ON bc.com_code = bci.com_code
        WHERE
            bc.com_code = #{comCode}
            AND bc.del_state = "1"
        GROUP BY
            bc.com_code
    </select>

    <!-- 删除景区商品表及资源特色表中数据 -->
    <delete id="deleteNewSceneryInfo" parameterType="java.lang.String">
      DELETE
        t,t1
      FROM
	    bx_commodity AS t
      LEFT JOIN
        bx_subjectivity AS t1
      ON
        t.com_code = t1.product_id
      WHERE
	    t1.product_id = #{comCode}
    </delete>

    <!--删除被拆分的线路的原信息-->
    <update id="delLineTrackInfo">
      UPDATE
        bx_commodity
      SET
        del_state = 0
      WHERE
        id = #{id}
    </update>
    <!-- 查询修改时景点修改的名称是否已经存在 -->
    <select id="querySceneryCount" resultType="java.lang.Integer">
      SELECT
          COUNT(1)
        FROM
          bx_commodity
        WHERE
          com_code = #{com_code}
          AND com_name = #{scenery_name}
    </select>

    <!-- 修改景点信息 -->
    <update id="updateNewSceneryInfo" parameterType="com.bx.gis.entity.BxCommodityCommon">
      UPDATE
        bx_commodity
      SET
        com_name = #{comName},
        state = #{state},
        city = #{city},
        com_address = #{comAddress},
        com_central = #{comCentral},
        com_begining = #{comBegining},
        com_moment = #{comMoment},
        com_best = #{comBest},
        com_level = #{comLevel},
        parentid = #{parentid},
        com_introduce = #{comIntroduce}
      WHERE
        com_code = #{comCode}
    </update>

    <!-- 查询景区出入口 -->
    <select id="querySceneryEntranceInfos" resultType="java.util.Map">
      SELECT
        id "parentid",
        com_entrance "entrance",
        com_exit "exit",
        com_duplex "duplex"
      FROM
        bx_commodity
      WHERE
        com_name = #{scenery_name}
--         AND parentid = 0
--         AND com_type = 4
--         AND com_level = 5
    </select>

    <!-- 查询景点下所有新添加的景点数据，并以标记展示出来 (parentid:景点id, collect_line_id：采线员id)-->
    <select id="queryNewSceneryPartInfo" resultType="java.util.Map">
        SELECT
            parentid,
            com_name,
            com_central,
            com_code
        FROM
            bx_commodity
        WHERE
            parentid = #{param1}
        AND com_central != ""
        AND com_central is not null
        AND del_state = 1
        AND	collect_line_id IN
        <foreach collection="param2" item="collectId" index="index" separator="," open="(" close=")">
            #{collectId}
        </foreach>
    </select>
    <!--查询所有线路的起点坐标信息-->
    <select id="queryNewSceneryTrackInfo" resultType="java.util.Map">
      SELECT
        parentid,
        1 'com_name',
        1 'com_central',
        SUBSTRING_INDEX(com_track, " ", 1) AS "com_centrals",
        com_code
      FROM
        bx_commodity
      WHERE
        parentid = #{param1}
        AND com_track is not null
        AND del_state = 1
        AND	collect_line_id IN
        <foreach collection="param2" item="collectId" index="index" separator="," open="(" close=")">
            #{collectId}
        </foreach>
        GROUP BY com_centrals
    </select>

    <!-- 查询景点下的所有路线的轨迹信息 -->
    <select id="querySceneryTrackInfos" resultType="java.util.Map">
      SELECT
        id,
        parentid,
        com_name,
        com_track
      FROM
        bx_commodity
      WHERE
        parentid = #{parentid}
        AND del_state = 1
        AND com_track is not null
    </select>

    <!--保存转换后的景点线路坐标信息-->
    <insert id="addPointlineInfos" parameterType="java.util.Map">
      INSERT INTO
        bx_commodity (
          com_code,com_type,parentid,com_track,com_name,com_begining,com_moment,com_level,state,bx_op_deptid,collect_line_id,com_time
        ) VALUES (
          #{comCode},#{comType},#{parentid},#{transedPointStrs},#{comName},#{comBegining}
          ,#{comMoment},#{comLevel},#{state},#{bxOpDeptid},#{collectLineId},now()
        )
    </insert>

    <!--新增线路百度坐标及对应的Gps坐标信息-->
    <insert id="addPoiInfo">
      INSERT INTO
        bx_commodity_poi (
        id,com_track_gps
        ) VALUES (
        #{id},#{com_track_gps}
        )
    </insert>

    <!--保存百度坐标信息到bx_commodity_poi-->
    <insert id="addBdTrackPoi">
        UPDATE
          bx_commodity_poi
        SET
          com_track_bd = #{com_track_bd}
        WHERE
          id = #{id}
    </insert>

    <!--修改线路百度坐标及对应的Gps坐标信息-->
    <update id="updatePoiInfo">
      UPDATE
        bx_commodity_poi
      SET
        com_track_bd = CONCAT(com_track_bd, #{com_track_bd})
      WHERE
        id = #{id}
    </update>

    <!--校验用户名和密码-->
    <select id="checkPsw" resultType="java.lang.Integer">
      SELECT
          COUNT(1)
        FROM
          bx_user
        WHERE
          username = #{username}
          AND password = #{password}
    </select>

    <!--根据id查询单品的介绍说明-->
    <select id="queryIntroduceInfo" resultType="java.util.Map">
      SELECT
        com_introduce,com_address,tra_id,bx_op_deptid
      FROM
        bx_commodity
      WHERE
        id = #{parentid}
    </select>

    <!--查询当前登录的采线员下的所有子采线员id-->
    <select id="queryCollectUserInfo" resultType="java.lang.Integer">
      SELECT
        id
      FROM
        u_user
      WHERE
        parent_id = #{collect_line_id}
    </select>

    <!--查询线路id是否存在-->
    <select id="findIdNum" resultType="java.lang.Integer">
        SELECT
          COUNT(0)
        FROM
          bx_commodity_poi
        WHERE
          id = #{id}
    </select>

    <!--查询该条线路的坐标信息是否完整-->
    <select id="findInfoCount" resultType="java.lang.Integer">
        SELECT
          COUNT(0)
        FROM
          bx_commodity_poi
        WHERE
          id = #{id}
          AND com_track_gps = #{com_track_gps}
    </select>

    <!--查询线路百度及Gps坐标扩展表信息-->
    <select id="queryGpsPoiTrackInfo" resultType="java.util.Map">
        SELECT
          id,com_track_gps
        FROM
          bx_commodity_poi
      WHERE
          com_track_bd is null
    </select>

    <!--根据线路gps轨迹查询操作的线路的id-->
    <select id="findLineId" resultType="java.lang.Integer">
        SELECT
            IFNULL(
                (
                    SELECT
                        id
                    FROM
                        bx_commodity_poi
                    WHERE
                        com_track_bd = #{com_track_bd}
                ) ,- 1
            ) "id"
    </select>


</mapper>